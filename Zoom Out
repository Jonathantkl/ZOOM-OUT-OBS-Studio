
hotkey_id = obs.OBS_INVALID_HOTKEY_ID
source_name = "Webcam"  
zoom_factor = 0.5       
normal_transform = nil 


function apply_zoom_out()
    local source = obs.obs_get_source_by_name(source_name)
    if source ~= nil then
        local settings = obs.obs_source_get_settings(source)

        
        local sceneitem = get_sceneitem_from_source(source)
        if sceneitem ~= nil then
            if normal_transform == nil then
                normal_transform = obs.obs_sceneitem_get_info(sceneitem)
            end

            local info = obs.obs_transform_info()
            obs.obs_sceneitem_get_info(sceneitem, info)

         
            info.scale.x = info.scale.x * zoom_factor
            info.scale.y = info.scale.y * zoom_factor

            obs.obs_sceneitem_set_info(sceneitem, info)
        end
        obs.obs_data_release(settings)
        obs.obs_source_release(source)
    end
end


function reset_zoom()
    local source = obs.obs_get_source_by_name(source_name)
    if source ~= nil then
        local sceneitem = get_sceneitem_from_source(source)
        if sceneitem ~= nil and normal_transform ~= nil then
            obs.obs_sceneitem_set_info(sceneitem, normal_transform)
        end
        obs.obs_source_release(source)
    end
end


function get_sceneitem_from_source(source)
    local scenes = obs.obs_frontend_get_scenes()
    for _, scene in ipairs(scenes) do
        local scene_source = obs.obs_scene_from_source(scene)
        local item = obs.obs_scene_find_source_recursive(scene_source, source_name)
        if item ~= nil then
            return item
        end
    end
    return nil
end


function on_event(pressed)
    if pressed then
        apply_zoom_out()
    else
        reset_zoom()
    end
end


function script_load(settings)
    hotkey_id = obs.obs_hotkey_register_frontend("zoom_out_hotkey", "Zoom Out Digital", on_event)
    local hotkey_save_array = obs.obs_data_get_array(settings, "zoom_out_hotkey")
    obs.obs_hotkey_load(hotkey_id, hotkey_save_array)
    obs.obs_data_array_release(hotkey_save_array)
end


function script_save(settings)
    local hotkey_save_array = obs.obs_hotkey_save(hotkey_id)
    obs.obs_data_set_array(settings, "zoom_out_hotkey", hotkey_save_array)
    obs.obs_data_array_release(hotkey_save_array)
end

function script_description()
    return "Atalho para aplicar Zoom Out digital em uma fonte específica.\n" ..
           "Configure a tecla nas Configurações de Atalhos do OBS."
end


function script_properties()
    local props = obs.obs_properties_create()
    obs.obs_properties_add_text(props, "source", "Nome da Fonte", obs.OBS_TEXT_DEFAULT)
    obs.obs_properties_add_float(props, "zoom_factor", "Fator de Zoom", 0.1, 1.0, 0.1)
    return props
end

function script_update(settings)
    source_name = obs.obs_data_get_string(settings, "source")
    zoom_factor = obs.obs_data_get_double(settings, "zoom_factor")
end
